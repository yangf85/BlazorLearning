@page "/roles/create"
@using BlazorLearning.Shared.ApiServices
@using BlazorLearning.Shared.Models
@inject IRoleApi RoleApi
@inject ISnackbar Snackbar
@inject NavigationManager Navigation

<PageTitle>创建角色</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-6">
    <!-- 面包屑导航 -->
    <MudBreadcrumbs Items="_breadcrumbItems" Class="mb-4" />

    <MudStack Spacing="4">
        <!-- 页面头部 -->
        <MudPaper Class="pa-4" Elevation="1">
            <MudStack Spacing="2">
                <MudText Typo="Typo.h4" Color="Color.Primary">
                    <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-2" />
                    创建新角色
                </MudText>
                <MudText Typo="Typo.body2" Color="Color.Secondary">
                    填写角色信息，创建新的系统角色
                </MudText>
            </MudStack>
        </MudPaper>

        <!-- 创建表单 -->
        <MudPaper Class="pa-6" Elevation="1">
            <MudForm @ref="form" @bind-IsValid="@isFormValid">
                <MudStack Spacing="4">
                    <!-- 基本信息 -->
                    <MudStack Spacing="3">
                        <MudText Typo="Typo.h6" Color="Color.Primary">
                            <MudIcon Icon="@Icons.Material.Filled.Info" Class="mr-2" />
                            基本信息
                        </MudText>

                        <MudDivider />

                        <MudGrid>
                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="roleModel.Name"
                                              Label="角色名称"
                                              Placeholder="如：Admin, User, Guest"
                                              HelperText="角色的英文标识，用于系统内部识别"
                                              Required="true"
                                              RequiredError="角色名称不能为空"
                                              Validation="@(new Func<string, IEnumerable<string>>(ValidateRoleName))"
                                              Immediate="true"
                                              Adornment="Adornment.Start"
                                              AdornmentIcon="@Icons.Material.Filled.Badge" />
                            </MudItem>

                            <MudItem xs="12" md="6">
                                <MudTextField @bind-Value="roleModel.DisplayName"
                                              Label="显示名称"
                                              Placeholder="如：管理员, 普通用户, 访客"
                                              HelperText="角色的中文显示名称"
                                              Adornment="Adornment.Start"
                                              AdornmentIcon="@Icons.Material.Filled.Label" />
                            </MudItem>

                            <MudItem xs="12">
                                <MudTextField @bind-Value="roleModel.Description"
                                              Label="角色描述"
                                              Placeholder="描述角色的职责和权限范围"
                                              HelperText="@GetDescriptionHelperText()"
                                              Lines="3"
                                              MaxLength="500"
                                              Counter="500"
                                              Adornment="Adornment.Start"
                                              AdornmentIcon="@Icons.Material.Filled.Description" />
                            </MudItem>

                            <MudItem xs="12">
                                <MudSwitch @bind-Value="roleModel.IsActive"
                                           Label="启用角色"
                                           Color="Color.Success"
                                           UnCheckedColor="Color.Default" />
                                <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mt-1">
                                    @(roleModel.IsActive ? "角色将立即生效，可分配给用户" : "角色将被禁用，不能分配给新用户")
                                </MudText>
                            </MudItem>
                        </MudGrid>
                    </MudStack>

                    <!-- 操作按钮 -->
                    <MudDivider />

                    <MudStack Row="true" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
                        <MudButton Variant="Variant.Text"
                                   Color="Color.Default"
                                   StartIcon="@Icons.Material.Filled.ArrowBack"
                                   OnClick="NavigateBack">
                            返回列表
                        </MudButton>

                        <MudStack Row="true" Spacing="2">
                            <MudButton Variant="Variant.Outlined"
                                       Color="Color.Secondary"
                                       StartIcon="@Icons.Material.Filled.Refresh"
                                       OnClick="ResetForm"
                                       Disabled="@isSubmitting">
                                重置表单
                            </MudButton>

                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.Save"
                                       OnClick="CreateRole"
                                       Disabled="@(!isFormValid || isSubmitting)">
                                @if (isSubmitting)
                                {
                                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                    <MudText Class="ms-2">创建中...</MudText>
                                }
                                else
                                {
                                    <MudText>创建角色</MudText>
                                }
                            </MudButton>
                        </MudStack>
                    </MudStack>
                </MudStack>
            </MudForm>
        </MudPaper>
    </MudStack>
</MudContainer>

@code {
    private MudForm form = null!;
    private bool isFormValid;
    private bool isSubmitting = false;

    // 角色模型
    private CreateRoleRequest roleModel = new()
    {
        Name = "",
        DisplayName = "",
        Description = "",
        IsActive = true
    };

    // 面包屑导航
    private List<BreadcrumbItem> _breadcrumbItems = new()
    {
        new BreadcrumbItem("首页", href: "/", icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("角色管理", href: "/roles", icon: Icons.Material.Filled.AdminPanelSettings),
        new BreadcrumbItem("创建角色", href: null, disabled: true, icon: Icons.Material.Filled.Add)
    };

    private async Task CreateRole()
    {
        if (!isFormValid || isSubmitting)
            return;

        try
        {
            isSubmitting = true;
            StateHasChanged();

            var response = await RoleApi.CreateRoleAsync(roleModel);

            if (response.Success)
            {
                Snackbar.Add("角色创建成功！", Severity.Success);
                Navigation.NavigateTo("/roles");
            }
            else
            {
                Snackbar.Add($"创建失败：{response.Message}", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"系统错误：{ex.Message}", Severity.Error);
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }

    private void ResetForm()
    {
        roleModel = new CreateRoleRequest
        {
            Name = "",
            DisplayName = "",
            Description = "",
            IsActive = true
        };
        form.ResetAsync();
        StateHasChanged();
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/roles");
    }

    private IEnumerable<string> ValidateRoleName(string roleName)
    {
        if (string.IsNullOrWhiteSpace(roleName))
        {
            yield return "角色名称不能为空";
        }
        else if (roleName.Length < 2)
        {
            yield return "角色名称至少需要2个字符";
        }
        else if (roleName.Length > 50)
        {
            yield return "角色名称不能超过50个字符";
        }
        else if (!System.Text.RegularExpressions.Regex.IsMatch(roleName, @"^[a-zA-Z][a-zA-Z0-9_-]*$"))
        {
            yield return "角色名称必须以字母开头，只能包含字母、数字、下划线和连字符";
        }
    }

    private string GetDescriptionHelperText()
    {
        var length = roleModel.Description?.Length ?? 0;
        return $"已输入 {length}/500 字符。详细描述有助于理解角色用途";
    }
}